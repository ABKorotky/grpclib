# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: example/helloworld.proto
# plugin: grpclib.plugin.main
from abc import ABCMeta, abstractmethod

import grpclib.client
import grpclib.__public__

import example.helloworld_pb2


class Greeter(metaclass=ABCMeta):

    @abstractmethod
    async def SayHello(self, request, context):
        pass

    def __mapping__(self):
        return {
            '/helloworld.Greeter/SayHello': grpclib.__public__.Handler(
                self.SayHello,
                grpclib.__public__.Cardinality.UNARY_UNARY,
                example.helloworld_pb2.HelloRequest,
                example.helloworld_pb2.HelloReply,
            ),
        }


class GreeterStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.channel = channel

    async def SayHello(self, message: example.helloworld_pb2.HelloRequest) -> example.helloworld_pb2.HelloReply:
        return await self.channel.unary_unary(
            '/helloworld.Greeter/SayHello',
            example.helloworld_pb2.HelloRequest,
            example.helloworld_pb2.HelloReply,
            message,
        )
